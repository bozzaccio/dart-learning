import 'dart:io';

class FileManager {
  Future createClassFile(String name) async {
    File createdFile = await File(Directory.current.path + "/" + name + ".dart")
        .create(recursive: true);

    IOSink sink = createdFile.openWrite(mode: FileMode.append);

    List<String> classNameWords = name.split("_");
    String content = "//autogenerated class \nclass " +
        classNameWords.map((e) => e.capitalize()).toList().merge() +
        " { \n}";
    sink.write(content);
    await sink.flush();
    await sink.close();
  }

  Future createMainFile(String name) async {
    File createdFile = await File(Directory.current.path + "/" + name + ".dart")
        .create(recursive: true);

    IOSink sink = createdFile.openWrite(mode: FileMode.append);
    String content =
        "//autogenerated main file \nvoid main(List<String> arguments)  { \n}";
    sink.write(content);
    await sink.flush();
    await sink.close();
  }

  Future createTestFile(String name) async {
    File createdFile =
        await File(Directory.current.path + "/" + name + "_test.dart")
            .create(recursive: true);

    IOSink sink = createdFile.openWrite(mode: FileMode.append);
    String content =
        "import 'package:test/test.dart'; \n \n//autogenerated test file \nvoid main() { \ntest('your test', () {\n    expect(true, true);\n});\n}";
    sink.write(content);
    await sink.flush();
    await sink.close();
  }
}

extension StringExtension on String {
  String capitalize() {
    // ignore: unnecessary_this
    return "${this[0].toUpperCase()}${this.substring(1).toLowerCase()}";
  }
}

extension StringListExtension on List<String> {
  String merge() {
    List<String> elements = this;
    String result = "";
    for (final String e in elements) {
      result = result + e;
    }
    return result;
  }
}
